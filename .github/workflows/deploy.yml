name: Deploy InViewAI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: 'npm'
          cache-dependency-path: 'webapp/package-lock.json'

      - name: Install dependencies
        run: cd webapp && npm ci

      - name: Run ESLint
        run: cd webapp && npm run lint

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: 'npm'
          cache-dependency-path: 'webapp/package-lock.json'

      - name: Install dependencies
        run: cd webapp && npm ci

      - name: Run tests
        run: cd webapp && npm test || echo "No tests configured, skipping..."

  deploy:
    name: Deploy
    needs: [lint, test]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: 'npm'
          cache-dependency-path: 'webapp/package-lock.json'

      - name: Install dependencies
        run: cd webapp && npm ci

      - name: Build
        run: cd webapp && npm run build

      # Deploy to Vercel
      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v20
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: ./
          vercel-args: '--prod'

      # Deploy to Firebase
      - name: Setup Firebase
        uses: w9jds/firebase-action@master
        with:
          args: deploy --only hosting,firestore,storage
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
          PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}

      # Create extension zip file
      - name: Create Extension ZIP
        run: |
          cd extension
          zip -r ../extension.zip *
          cd ..

      # Upload extension artifact
      - name: Upload Extension
        uses: actions/upload-artifact@v3
        with:
          name: extension
          path: extension.zip 