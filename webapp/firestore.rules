rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Função auxiliar para verificar autenticação
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Função auxiliar para verificar se o usuário é dono do recurso
    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    // Regras para coleção de usuários
    match /usuarios/{userId} {
      // Permitir leitura apenas pelo próprio usuário
      allow read: if isAuthenticated() && isOwner(userId);
      
      // Permitir criação apenas pelo próprio usuário
      allow create: if isAuthenticated() && isOwner(userId);
      
      // Permitir atualização apenas pelo próprio usuário
      allow update: if isAuthenticated() && isOwner(userId);
      
      // Nunca permitir exclusão direta de usuários
      allow delete: if false;
    }
    
    // Regras para coleção de entrevistas
    match /entrevistas/{entrevistaId} {
      // Permitir leitura apenas pelo dono da entrevista
      allow read: if isAuthenticated() && isOwner(resource.data.userId);
      
      // Permitir criação apenas se o usuário for o dono
      allow create: if isAuthenticated() && isOwner(request.resource.data.userId);
      
      // Permitir atualização apenas pelo dono da entrevista
      allow update: if isAuthenticated() && isOwner(resource.data.userId);
      
      // Permitir exclusão apenas pelo dono da entrevista
      allow delete: if isAuthenticated() && isOwner(resource.data.userId);
    }
    
    // Regras para coleção de perguntas
    match /perguntas/{perguntaId} {
      // Função para verificar se o usuário é dono da entrevista associada
      function isEntrevistaOwner() {
        let entrevistaId = resource.data.entrevistaId;
        let entrevista = get(/databases/$(database)/documents/entrevistas/$(entrevistaId));
        return isOwner(entrevista.data.userId);
      }
      
      // Permitir leitura apenas pelo dono da entrevista associada
      allow read: if isAuthenticated() && isEntrevistaOwner();
      
      // Permitir criação apenas pelo dono da entrevista associada
      allow create: if isAuthenticated() && (
        get(/databases/$(database)/documents/entrevistas/$(request.resource.data.entrevistaId)).data.userId == request.auth.uid
      );
      
      // Permitir atualização apenas pelo dono da entrevista associada
      allow update: if isAuthenticated() && isEntrevistaOwner();
      
      // Permitir exclusão apenas pelo dono da entrevista associada
      allow delete: if isAuthenticated() && isEntrevistaOwner();
    }
    
    // Regras para coleção de atividades
    match /atividades/{atividadeId} {
      // Permitir leitura apenas pelo próprio usuário
      allow read: if isAuthenticated() && isOwner(resource.data.userId);
      
      // Permitir criação apenas pelo próprio usuário
      allow create: if isAuthenticated() && isOwner(request.resource.data.userId);
      
      // Não permitir atualização (atividades são imutáveis)
      allow update: if false;
      
      // Não permitir exclusão direta de atividades
      allow delete: if false;
    }
    
    // Negação por padrão para todas as outras coleções
    match /{document=**} {
      allow read, write: if false;
    }
  }
} 